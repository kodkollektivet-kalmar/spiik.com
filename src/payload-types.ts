/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'board-members': BoardMember;
    statutes: Statute;
    programs: Program;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'board-members': BoardMembersSelect<false> | BoardMembersSelect<true>;
    statutes: StatutesSelect<false> | StatutesSelect<true>;
    programs: ProgramsSelect<false> | ProgramsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    navigation: Navigation;
    'site-settings': SiteSetting;
    'board-page': BoardPage;
    'introduction-page': IntroductionPage;
    'housing-page': HousingPage;
    'membership-page': MembershipPage;
    'sponsors-page': SponsorsPage;
    'statutes-page': StatutesPage;
  };
  globalsSelect: {
    navigation: NavigationSelect<false> | NavigationSelect<true>;
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
    'board-page': BoardPageSelect<false> | BoardPageSelect<true>;
    'introduction-page': IntroductionPageSelect<false> | IntroductionPageSelect<true>;
    'housing-page': HousingPageSelect<false> | HousingPageSelect<true>;
    'membership-page': MembershipPageSelect<false> | MembershipPageSelect<true>;
    'sponsors-page': SponsorsPageSelect<false> | SponsorsPageSelect<true>;
    'statutes-page': StatutesPageSelect<false> | StatutesPageSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "board-members".
 */
export interface BoardMember {
  id: number;
  name: string;
  email?: string | null;
  position:
    | 'Ordförande'
    | 'Vice ordförande'
    | 'Kassör'
    | 'Sekreterare'
    | 'Eventansvarig'
    | 'PR-ansvarig'
    | 'Näringslivsansvarig'
    | 'Studierådsansvarig'
    | 'Webbansvarig'
    | 'Ledamot';
  studies?: string | null;
  message?: string | null;
  quote?: string | null;
  merit?: string | null;
  favoriteGame?: string | null;
  image: number | Media;
  /**
   * Used for manual ordering on the website
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "statutes".
 */
export interface Statute {
  id: number;
  title: string;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "programs".
 */
export interface Program {
  id: number;
  code: string;
  name: string;
  degree?: ('Kandidatexamen' | 'Master' | 'Högskoleexamen') | null;
  description?: string | null;
  url: string;
  color?:
    | ('#FDE300' | '#FF6A00' | '#E43222' | '#e7f0ff' | '#ffe8e5' | '#ecfff3' | '#fff6cc' | '#ffffff' | '#f3f4f6')
    | null;
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'board-members';
        value: number | BoardMember;
      } | null)
    | ({
        relationTo: 'statutes';
        value: number | Statute;
      } | null)
    | ({
        relationTo: 'programs';
        value: number | Program;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "board-members_select".
 */
export interface BoardMembersSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  position?: T;
  studies?: T;
  message?: T;
  quote?: T;
  merit?: T;
  favoriteGame?: T;
  image?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "statutes_select".
 */
export interface StatutesSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "programs_select".
 */
export interface ProgramsSelect<T extends boolean = true> {
  code?: T;
  name?: T;
  degree?: T;
  description?: T;
  url?: T;
  color?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation".
 */
export interface Navigation {
  id: number;
  main?:
    | {
        label: string;
        href: string;
        external?: boolean | null;
        id?: string | null;
      }[]
    | null;
  footer?:
    | {
        label: string;
        href: string;
        external?: boolean | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface SiteSetting {
  id: number;
  siteName: string;
  logo?: (number | null) | Media;
  contactEmail?: string | null;
  socialLinks?:
    | {
        platform: 'instagram' | 'facebook' | 'tiktok' | 'linkedin' | 'youtube' | 'spotify' | 'discord' | 'web';
        label?: string | null;
        url: string;
        username?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Styrelsen page content
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "board-page".
 */
export interface BoardPage {
  id: number;
  heroTitle?: string | null;
  heroSubtitle?: string | null;
  heroImage?: (number | null) | Media;
  heroBadge?: string | null;
  sections?:
    | {
        title?: string | null;
        text?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        image?: (number | null) | Media;
        ctaLabel?: string | null;
        ctaUrl?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Introduktion page content
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "introduction-page".
 */
export interface IntroductionPage {
  id: number;
  heroTitle?: string | null;
  heroSubtitle?: string | null;
  heroImage?: (number | null) | Media;
  heroBadge?: string | null;
  sections?:
    | {
        title?: string | null;
        text?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        image?: (number | null) | Media;
        ctaLabel?: string | null;
        ctaUrl?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Länk till vart medlemskap kan köpas, ex. länk till att ladda ner Orbi appen
   */
  membershipLink?: string | null;
  /**
   * Beskrivning för länken till medlemskap, ex. 'Ladda ner appen och sök på SPIIK för att köpa medlemskap'
   */
  membershipLinkDescription?: string | null;
  membershipTiers?:
    | {
        label: string;
        title: string;
        description: string;
        prices?:
          | {
              years: '1' | '2' | '3';
              amount: string;
              id?: string | null;
            }[]
          | null;
        gradient?:
          | (
              | 'from-[#FFF4DE] via-white to-[#FFE6C8]'
              | 'from-[#EAE9FF] via-white to-[#D9F1FF]'
              | 'from-[#FFE8E8] via-white to-[#FFE0E0]'
              | 'from-[#E8F5E8] via-white to-[#E0F0E0]'
            )
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Images to display in the carousel section
   */
  carouselImages?:
    | {
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Boende page content
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "housing-page".
 */
export interface HousingPage {
  id: number;
  heroTitle?: string | null;
  heroSubtitle?: string | null;
  heroImage?: (number | null) | Media;
  heroBadge?: string | null;
  sections?:
    | {
        title?: string | null;
        text?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        image?: (number | null) | Media;
        ctaLabel?: string | null;
        ctaUrl?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Medlemskap page content
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "membership-page".
 */
export interface MembershipPage {
  id: number;
  heroTitle?: string | null;
  heroSubtitle?: string | null;
  heroImage?: (number | null) | Media;
  heroBadge?: string | null;
  sections?:
    | {
        title?: string | null;
        text?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        image?: (number | null) | Media;
        ctaLabel?: string | null;
        ctaUrl?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Länk till vart medlemskap kan köpas, ex. länk till att ladda ner Orbi appen
   */
  membershipLink?: string | null;
  /**
   * Beskrivning för länken till medlemskap, ex. 'Ladda ner appen och sök på SPIIK för att köpa medlemskap'
   */
  membershipLinkDescription?: string | null;
  membershipTiers?:
    | {
        label: string;
        title: string;
        description: string;
        prices?:
          | {
              years: '1' | '2' | '3';
              amount: string;
              id?: string | null;
            }[]
          | null;
        gradient?:
          | (
              | 'from-[#FFF4DE] via-white to-[#FFE6C8]'
              | 'from-[#EAE9FF] via-white to-[#D9F1FF]'
              | 'from-[#FFE8E8] via-white to-[#FFE0E0]'
              | 'from-[#E8F5E8] via-white to-[#E0F0E0]'
            )
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Sponsorer page content
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sponsors-page".
 */
export interface SponsorsPage {
  id: number;
  /**
   * Main content for this page
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Stadgar page content
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "statutes-page".
 */
export interface StatutesPage {
  id: number;
  /**
   * Main content for this page
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation_select".
 */
export interface NavigationSelect<T extends boolean = true> {
  main?:
    | T
    | {
        label?: T;
        href?: T;
        external?: T;
        id?: T;
      };
  footer?:
    | T
    | {
        label?: T;
        href?: T;
        external?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  siteName?: T;
  logo?: T;
  contactEmail?: T;
  socialLinks?:
    | T
    | {
        platform?: T;
        label?: T;
        url?: T;
        username?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "board-page_select".
 */
export interface BoardPageSelect<T extends boolean = true> {
  heroTitle?: T;
  heroSubtitle?: T;
  heroImage?: T;
  heroBadge?: T;
  sections?:
    | T
    | {
        title?: T;
        text?: T;
        image?: T;
        ctaLabel?: T;
        ctaUrl?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "introduction-page_select".
 */
export interface IntroductionPageSelect<T extends boolean = true> {
  heroTitle?: T;
  heroSubtitle?: T;
  heroImage?: T;
  heroBadge?: T;
  sections?:
    | T
    | {
        title?: T;
        text?: T;
        image?: T;
        ctaLabel?: T;
        ctaUrl?: T;
        id?: T;
      };
  membershipLink?: T;
  membershipLinkDescription?: T;
  membershipTiers?:
    | T
    | {
        label?: T;
        title?: T;
        description?: T;
        prices?:
          | T
          | {
              years?: T;
              amount?: T;
              id?: T;
            };
        gradient?: T;
        id?: T;
      };
  carouselImages?:
    | T
    | {
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "housing-page_select".
 */
export interface HousingPageSelect<T extends boolean = true> {
  heroTitle?: T;
  heroSubtitle?: T;
  heroImage?: T;
  heroBadge?: T;
  sections?:
    | T
    | {
        title?: T;
        text?: T;
        image?: T;
        ctaLabel?: T;
        ctaUrl?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "membership-page_select".
 */
export interface MembershipPageSelect<T extends boolean = true> {
  heroTitle?: T;
  heroSubtitle?: T;
  heroImage?: T;
  heroBadge?: T;
  sections?:
    | T
    | {
        title?: T;
        text?: T;
        image?: T;
        ctaLabel?: T;
        ctaUrl?: T;
        id?: T;
      };
  membershipLink?: T;
  membershipLinkDescription?: T;
  membershipTiers?:
    | T
    | {
        label?: T;
        title?: T;
        description?: T;
        prices?:
          | T
          | {
              years?: T;
              amount?: T;
              id?: T;
            };
        gradient?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sponsors-page_select".
 */
export interface SponsorsPageSelect<T extends boolean = true> {
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "statutes-page_select".
 */
export interface StatutesPageSelect<T extends boolean = true> {
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}